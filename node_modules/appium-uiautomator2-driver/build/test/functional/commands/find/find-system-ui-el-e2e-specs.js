'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _helpersSession = require('../../helpers/session');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var driver = undefined;
var defaultCaps = {
  appPackage: 'com.android.settings',
  appActivity: '.Settings',
  deviceName: 'Android',
  platformName: 'Android'
};

describe('Find - android ui elements @skip-ci', function () {
  var _this = this;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap((0, _helpersSession.initDriver)(defaultCaps));

        case 2:
          driver = context$2$0.sent;

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!driver) {
            context$2$0.next = 3;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should not find statusBarBackground element via xpath', function callee$1$0() {
    var statusBar, statusBarWithInvisibleEl;
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.findElOrEls('xpath', '//*[@resource-id=\'android:id/statusBarBackground\']', true));

        case 2:
          statusBar = context$2$0.sent;
          //check server (NPE) if allowInvisibleElements is unset on server side
          statusBar.length.should.be.equal(0);
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.updateSettings({ "allowInvisibleElements": false }));

        case 6:
          context$2$0.next = 8;
          return _regeneratorRuntime.awrap(driver.findElOrEls('xpath', '//*[@resource-id=\'android:id/statusBarBackground\']', true));

        case 8:
          statusBarWithInvisibleEl = context$2$0.sent;

          statusBarWithInvisibleEl.length.should.be.equal(0);

        case 10:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  it('should find statusBarBackground element via xpath', function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.updateSettings({ "allowInvisibleElements": true }));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.findElOrEls('xpath', '//*[@resource-id=\'android:id/statusBarBackground\']', false).should.eventually.exist);

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
});

// TODO: why does travis fail on this?
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kcy9maW5kL2ZpbmQtc3lzdGVtLXVpLWVsLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7b0JBQWlCLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7OzhCQUNsQix1QkFBdUI7O0FBR2xELGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsSUFBSSxNQUFNLFlBQUEsQ0FBQztBQUNYLElBQUksV0FBVyxHQUFHO0FBQ2hCLFlBQVUsRUFBRSxzQkFBc0I7QUFDbEMsYUFBVyxFQUFFLFdBQVc7QUFDeEIsWUFBVSxFQUFFLFNBQVM7QUFDckIsY0FBWSxFQUFFLFNBQVM7Q0FDeEIsQ0FBQzs7QUFFRixRQUFRLENBQUMscUNBQXFDLEVBQUUsWUFBWTs7O0FBQzFELFFBQU0sQ0FBQzs7Ozs7MkNBR1UsZ0NBQVcsV0FBVyxDQUFDOzs7QUFBdEMsZ0JBQU07Ozs7Ozs7R0FDUCxDQUFDLENBQUM7QUFDSCxPQUFLLENBQUM7Ozs7ZUFDQSxNQUFNOzs7Ozs7MkNBQ0YsTUFBTSxDQUFDLGFBQWEsRUFBRTs7Ozs7OztHQUUvQixDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsdURBQXVELEVBQUU7UUFDdEQsU0FBUyxFQUdULHdCQUF3Qjs7Ozs7MkNBSE4sTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLDBEQUF3RCxJQUFJLENBQUM7OztBQUF6RyxtQkFBUzs7QUFDYixtQkFBUyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzs7MkNBQzlCLE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFBQyx3QkFBd0IsRUFBRSxLQUFLLEVBQUMsQ0FBQzs7OzsyQ0FDekIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxPQUFPLDBEQUF3RCxJQUFJLENBQUM7OztBQUF4SCxrQ0FBd0I7O0FBQzVCLGtDQUF3QixDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQzs7Ozs7OztHQUNwRCxDQUFDLENBQUM7QUFDSCxJQUFFLENBQUMsbURBQW1ELEVBQUU7Ozs7OzJDQUNoRCxNQUFNLENBQUMsY0FBYyxDQUFDLEVBQUMsd0JBQXdCLEVBQUUsSUFBSSxFQUFDLENBQUM7Ozs7MkNBQ3ZELE1BQU0sQ0FBQyxXQUFXLENBQUMsT0FBTywwREFBd0QsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLOzs7Ozs7O0dBQ3ZILENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZHMvZmluZC9maW5kLXN5c3RlbS11aS1lbC1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCB7IGluaXREcml2ZXIgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3Nlc3Npb24nO1xuXG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmxldCBkcml2ZXI7XG5sZXQgZGVmYXVsdENhcHMgPSB7XG4gIGFwcFBhY2thZ2U6ICdjb20uYW5kcm9pZC5zZXR0aW5ncycsXG4gIGFwcEFjdGl2aXR5OiAnLlNldHRpbmdzJyxcbiAgZGV2aWNlTmFtZTogJ0FuZHJvaWQnLFxuICBwbGF0Zm9ybU5hbWU6ICdBbmRyb2lkJ1xufTtcblxuZGVzY3JpYmUoJ0ZpbmQgLSBhbmRyb2lkIHVpIGVsZW1lbnRzIEBza2lwLWNpJywgZnVuY3Rpb24gKCkge1xuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIC8vIFRPRE86IHdoeSBkb2VzIHRyYXZpcyBmYWlsIG9uIHRoaXM/XG5cbiAgICBkcml2ZXIgPSBhd2FpdCBpbml0RHJpdmVyKGRlZmF1bHRDYXBzKTtcbiAgfSk7XG4gIGFmdGVyKGFzeW5jICgpID0+IHtcbiAgICBpZiAoZHJpdmVyKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuZGVsZXRlU2Vzc2lvbigpO1xuICAgIH1cbiAgfSk7XG4gIGl0KCdzaG91bGQgbm90IGZpbmQgc3RhdHVzQmFyQmFja2dyb3VuZCBlbGVtZW50IHZpYSB4cGF0aCcsIGFzeW5jICgpID0+IHtcbiAgICBsZXQgc3RhdHVzQmFyID0gYXdhaXQgZHJpdmVyLmZpbmRFbE9yRWxzKCd4cGF0aCcsIGAvLypbQHJlc291cmNlLWlkPSdhbmRyb2lkOmlkL3N0YXR1c0JhckJhY2tncm91bmQnXWAsIHRydWUpOyAvL2NoZWNrIHNlcnZlciAoTlBFKSBpZiBhbGxvd0ludmlzaWJsZUVsZW1lbnRzIGlzIHVuc2V0IG9uIHNlcnZlciBzaWRlXG4gICAgc3RhdHVzQmFyLmxlbmd0aC5zaG91bGQuYmUuZXF1YWwoMCk7XG4gICAgYXdhaXQgZHJpdmVyLnVwZGF0ZVNldHRpbmdzKHtcImFsbG93SW52aXNpYmxlRWxlbWVudHNcIjogZmFsc2V9KTtcbiAgICBsZXQgc3RhdHVzQmFyV2l0aEludmlzaWJsZUVsID0gYXdhaXQgZHJpdmVyLmZpbmRFbE9yRWxzKCd4cGF0aCcsIGAvLypbQHJlc291cmNlLWlkPSdhbmRyb2lkOmlkL3N0YXR1c0JhckJhY2tncm91bmQnXWAsIHRydWUpO1xuICAgIHN0YXR1c0JhcldpdGhJbnZpc2libGVFbC5sZW5ndGguc2hvdWxkLmJlLmVxdWFsKDApO1xuICB9KTtcbiAgaXQoJ3Nob3VsZCBmaW5kIHN0YXR1c0JhckJhY2tncm91bmQgZWxlbWVudCB2aWEgeHBhdGgnLCBhc3luYyAoKSA9PiB7XG4gICAgYXdhaXQgZHJpdmVyLnVwZGF0ZVNldHRpbmdzKHtcImFsbG93SW52aXNpYmxlRWxlbWVudHNcIjogdHJ1ZX0pO1xuICAgIGF3YWl0IGRyaXZlci5maW5kRWxPckVscygneHBhdGgnLCBgLy8qW0ByZXNvdXJjZS1pZD0nYW5kcm9pZDppZC9zdGF0dXNCYXJCYWNrZ3JvdW5kJ11gLCBmYWxzZSkuc2hvdWxkLmV2ZW50dWFsbHkuZXhpc3Q7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uLy4uIn0=
