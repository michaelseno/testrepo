'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumAdb = require('appium-adb');

var _appiumAdb2 = _interopRequireDefault(_appiumAdb);

var _ = require('../../..');

var _2 = _interopRequireDefault(_);

function initDriver(caps) {
  var adb, driver;
  return _regeneratorRuntime.async(function initDriver$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!process.env.TRAVIS) {
          context$1$0.next = 11;
          break;
        }

        adb = new _appiumAdb2['default']();
        context$1$0.prev = 2;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(adb.forceStop('com.android.inputmethod.latin'));

      case 5:
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(adb.shell(['pm', 'clear', 'com.android.inputmethod.latin']));

      case 7:
        context$1$0.next = 11;
        break;

      case 9:
        context$1$0.prev = 9;
        context$1$0.t0 = context$1$0['catch'](2);

      case 11:
        driver = new _2['default']();
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(driver.createSession(caps));

      case 14:
        return context$1$0.abrupt('return', driver);

      case 15:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[2, 9]]);
}

exports.initDriver = initDriver;

// on Travis, sometimes we get the keyboard dying and the screen stuck
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9oZWxwZXJzL3Nlc3Npb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozt5QkFBZ0IsWUFBWTs7OztnQkFDVSxVQUFVOzs7O0FBR2hELFNBQWUsVUFBVSxDQUFFLElBQUk7TUFFdkIsR0FBRyxFQVFMLE1BQU07Ozs7YUFUTixPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU07Ozs7O0FBQ2hCLFdBQUcsR0FBRyw0QkFBUzs7O3lDQUdYLEdBQUcsQ0FBQyxTQUFTLENBQUMsK0JBQStCLENBQUM7Ozs7eUNBQzlDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLCtCQUErQixDQUFDLENBQUM7Ozs7Ozs7Ozs7O0FBSWpFLGNBQU0sR0FBRyxtQkFBK0I7O3lDQUN0QyxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQzs7OzRDQUV6QixNQUFNOzs7Ozs7O0NBQ2Q7O1FBRVEsVUFBVSxHQUFWLFVBQVUiLCJmaWxlIjoidGVzdC9mdW5jdGlvbmFsL2hlbHBlcnMvc2Vzc2lvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBBREIgZnJvbSAnYXBwaXVtLWFkYic7XG5pbXBvcnQgQW5kcm9pZFVpYXV0b21hdG9yMkRyaXZlciBmcm9tICcuLi8uLi8uLic7XG5cblxuYXN5bmMgZnVuY3Rpb24gaW5pdERyaXZlciAoY2Fwcykge1xuICBpZiAocHJvY2Vzcy5lbnYuVFJBVklTKSB7XG4gICAgbGV0IGFkYiA9IG5ldyBBREIoKTtcbiAgICB0cnkge1xuICAgICAgLy8gb24gVHJhdmlzLCBzb21ldGltZXMgd2UgZ2V0IHRoZSBrZXlib2FyZCBkeWluZyBhbmQgdGhlIHNjcmVlbiBzdHVja1xuICAgICAgYXdhaXQgYWRiLmZvcmNlU3RvcCgnY29tLmFuZHJvaWQuaW5wdXRtZXRob2QubGF0aW4nKTtcbiAgICAgIGF3YWl0IGFkYi5zaGVsbChbJ3BtJywgJ2NsZWFyJywgJ2NvbS5hbmRyb2lkLmlucHV0bWV0aG9kLmxhdGluJ10pO1xuICAgIH0gY2F0Y2ggKGlnbikge31cbiAgfVxuXG4gIGxldCBkcml2ZXIgPSBuZXcgQW5kcm9pZFVpYXV0b21hdG9yMkRyaXZlcigpO1xuICBhd2FpdCBkcml2ZXIuY3JlYXRlU2Vzc2lvbihjYXBzKTtcblxuICByZXR1cm4gZHJpdmVyO1xufVxuXG5leHBvcnQgeyBpbml0RHJpdmVyIH07XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uLy4uIn0=
