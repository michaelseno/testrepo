'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _Object$assign = require('babel-runtime/core-js/object/assign')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _ = require('../..');

var _2 = _interopRequireDefault(_);

var _appiumAdb = require('appium-adb');

var _appiumAdb2 = _interopRequireDefault(_appiumAdb);

var _desired = require('./desired');

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

var APIDEMOS_PACKAGE = 'io.appium.android.apis';

function killServer(adbPort) {
  var adb;
  return _regeneratorRuntime.async(function killServer$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumAdb2['default'].createADB({ adbPort: adbPort }));

      case 2:
        adb = context$1$0.sent;
        context$1$0.next = 5;
        return _regeneratorRuntime.awrap(adb.killServer());

      case 5:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

describe('createSession', function () {
  var driver = undefined;
  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(killServer(5037));

        case 2:
          driver = new _2['default']();

        case 3:
        case 'end':
          return context$2$0.stop();
      }
    }, null, this);
  });

  describe('default adb port', function () {
    var _this = this;

    afterEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.deleteSession());

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should start android session focusing on default pkg and act', function callee$2$0() {
      var _ref, appPackage, appActivity;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.createSession(_desired.APIDEMOS_CAPS));

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 4:
            _ref = context$3$0.sent;
            appPackage = _ref.appPackage;
            appActivity = _ref.appActivity;

            appPackage.should.equal('io.appium.android.apis');
            appActivity.should.equal('.ApiDemos');

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should start android session focusing on custom pkg and act', function callee$2$0() {
      var caps, _ref2, appPackage, appActivity;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            caps = _Object$assign({}, _desired.APIDEMOS_CAPS, {
              appPackage: 'io.appium.android.apis',
              appActivity: '.view.SplitTouchView'
            });
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.createSession(caps));

          case 3:
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 5:
            _ref2 = context$3$0.sent;
            appPackage = _ref2.appPackage;
            appActivity = _ref2.appActivity;

            appPackage.should.equal(caps.appPackage);
            appActivity.should.equal(caps.appActivity);

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should error out for not apk extension', function callee$2$0() {
      var caps;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            caps = _Object$assign({}, _desired.APIDEMOS_CAPS, {
              app: 'foo',
              appPackage: 'io.appium.android.apis',
              appActivity: '.view.SplitTouchView'
            });
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.createSession(caps).should.eventually.be.rejectedWith(/New app path foo did not have extension \.apk/));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should error out for invalid app path', function callee$2$0() {
      var caps;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            caps = _Object$assign({}, _desired.APIDEMOS_CAPS, {
              app: 'foo.apk',
              appPackage: 'io.appium.android.apis',
              appActivity: '.view.SplitTouchView'
            });
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.createSession(caps).should.eventually.be.rejectedWith(/Could not find/));

          case 3:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
    it('should get device model, manufacturer and screen size in session details', function callee$2$0() {
      var caps, serverCaps;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            caps = _Object$assign({}, _desired.APIDEMOS_CAPS, {
              appPackage: 'io.appium.android.apis',
              appActivity: '.view.SplitTouchView'
            });
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.createSession(caps));

          case 3:
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.getSession());

          case 5:
            serverCaps = context$3$0.sent;

            serverCaps.deviceScreenSize.should.exist;
            serverCaps.deviceModel.should.exist;
            serverCaps.deviceManufacturer.should.exist;

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });

  describe('custom adb port', function () {
    var _this2 = this;

    var adbPort = 5042;

    before(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(killServer(5037));

          case 2:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });
    afterEach(function callee$2$0() {
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            context$3$0.next = 2;
            return _regeneratorRuntime.awrap(driver.deleteSession());

          case 2:
            context$3$0.next = 4;
            return _regeneratorRuntime.awrap(killServer(adbPort));

          case 4:
          case 'end':
            return context$3$0.stop();
        }
      }, null, this);
    });

    it('should start android session with a custom adb port', function callee$2$0() {
      var caps, _ref3, appPackage, appActivity;

      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            caps = _Object$assign({}, _desired.APIDEMOS_CAPS, {
              adbPort: adbPort
            });
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.createSession(caps));

          case 3:
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

          case 5:
            _ref3 = context$3$0.sent;
            appPackage = _ref3.appPackage;
            appActivity = _ref3.appActivity;

            appPackage.should.equal('io.appium.android.apis');
            appActivity.should.equal('.ApiDemos');

          case 10:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this2);
    });
  });
});

describe('close', function () {
  var _this3 = this;

  var driver = undefined;
  before(function () {
    driver = new _2['default']();
  });
  afterEach(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.deleteSession());

        case 2:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this3);
  });
  it('should close application', function callee$1$0() {
    var _ref4, appPackage;

    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          context$2$0.next = 2;
          return _regeneratorRuntime.awrap(driver.createSession(_desired.APIDEMOS_CAPS));

        case 2:
          context$2$0.next = 4;
          return _regeneratorRuntime.awrap(driver.closeApp());

        case 4:
          context$2$0.next = 6;
          return _regeneratorRuntime.awrap(driver.adb.getFocusedPackageAndActivity());

        case 6:
          _ref4 = context$2$0.sent;
          appPackage = _ref4.appPackage;

          if (appPackage) {
            appPackage.should.not.equal(APIDEMOS_PACKAGE);
          }

        case 9:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this3);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9kcml2ZXItZTJlLXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O29CQUFpQixNQUFNOzs7OzhCQUNJLGtCQUFrQjs7OztnQkFDUCxPQUFPOzs7O3lCQUM3QixZQUFZOzs7O3VCQUNFLFdBQVc7O0FBR3pDLGtCQUFLLE1BQU0sRUFBRSxDQUFDO0FBQ2Qsa0JBQUssR0FBRyw2QkFBZ0IsQ0FBQzs7QUFFekIsSUFBTSxnQkFBZ0IsR0FBRyx3QkFBd0IsQ0FBQzs7QUFFbEQsU0FBZSxVQUFVLENBQUUsT0FBTztNQUM1QixHQUFHOzs7Ozt5Q0FBUyx1QkFBSSxTQUFTLENBQUMsRUFBQyxPQUFPLEVBQVAsT0FBTyxFQUFDLENBQUM7OztBQUFwQyxXQUFHOzt5Q0FDRCxHQUFHLENBQUMsVUFBVSxFQUFFOzs7Ozs7O0NBQ3ZCOztBQUVELFFBQVEsQ0FBQyxlQUFlLEVBQUUsWUFBWTtBQUNwQyxNQUFJLE1BQU0sWUFBQSxDQUFDO0FBQ1gsUUFBTSxDQUFDOzs7OzsyQ0FDQyxVQUFVLENBQUMsSUFBSSxDQUFDOzs7QUFDdEIsZ0JBQU0sR0FBRyxtQkFBK0IsQ0FBQzs7Ozs7OztHQUMxQyxDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGtCQUFrQixFQUFFLFlBQVk7OztBQUN2QyxhQUFTLENBQUM7Ozs7OzZDQUNGLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs7Ozs7S0FDN0IsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQyw4REFBOEQsRUFBRTtnQkFFNUQsVUFBVSxFQUFFLFdBQVc7Ozs7Ozs2Q0FEdEIsTUFBTSxDQUFDLGFBQWEsd0JBQWU7Ozs7NkNBQ0gsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRTs7OztBQUExRSxzQkFBVSxRQUFWLFVBQVU7QUFBRSx1QkFBVyxRQUFYLFdBQVc7O0FBQzVCLHNCQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO0FBQ2xELHVCQUFXLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQzs7Ozs7OztLQUN2QyxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsNkRBQTZELEVBQUU7VUFDNUQsSUFBSSxTQUtILFVBQVUsRUFBRSxXQUFXOzs7OztBQUx4QixnQkFBSSxHQUFHLGVBQWMsRUFBRSwwQkFBaUI7QUFDMUMsd0JBQVUsRUFBRSx3QkFBd0I7QUFDcEMseUJBQVcsRUFBRSxzQkFBc0I7YUFDcEMsQ0FBQzs7NkNBQ0ksTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7Ozs7NkNBQ00sTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRTs7OztBQUExRSxzQkFBVSxTQUFWLFVBQVU7QUFBRSx1QkFBVyxTQUFYLFdBQVc7O0FBQzVCLHNCQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDekMsdUJBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQzs7Ozs7OztLQUM1QyxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsd0NBQXdDLEVBQUU7VUFDdkMsSUFBSTs7OztBQUFKLGdCQUFJLEdBQUcsZUFBYyxFQUFFLDBCQUFpQjtBQUMxQyxpQkFBRyxFQUFFLEtBQUs7QUFDVix3QkFBVSxFQUFFLHdCQUF3QjtBQUNwQyx5QkFBVyxFQUFFLHNCQUFzQjthQUNwQyxDQUFDOzs2Q0FDSSxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQywrQ0FBK0MsQ0FBQzs7Ozs7OztLQUNwSCxDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsdUNBQXVDLEVBQUU7VUFDdEMsSUFBSTs7OztBQUFKLGdCQUFJLEdBQUcsZUFBYyxFQUFFLDBCQUFpQjtBQUMxQyxpQkFBRyxFQUFFLFNBQVM7QUFDZCx3QkFBVSxFQUFFLHdCQUF3QjtBQUNwQyx5QkFBVyxFQUFFLHNCQUFzQjthQUNwQyxDQUFDOzs2Q0FDSSxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQzs7Ozs7OztLQUNyRixDQUFDLENBQUM7QUFDSCxNQUFFLENBQUMsMEVBQTBFLEVBQUU7VUFDekUsSUFBSSxFQU1KLFVBQVU7Ozs7QUFOVixnQkFBSSxHQUFHLGVBQWMsRUFBRSwwQkFBaUI7QUFDMUMsd0JBQVUsRUFBRSx3QkFBd0I7QUFDcEMseUJBQVcsRUFBRSxzQkFBc0I7YUFDcEMsQ0FBQzs7NkNBQ0ksTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUM7Ozs7NkNBRVQsTUFBTSxDQUFDLFVBQVUsRUFBRTs7O0FBQXRDLHNCQUFVOztBQUNkLHNCQUFVLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztBQUN6QyxzQkFBVSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ3BDLHNCQUFVLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQzs7Ozs7OztLQUM1QyxDQUFDLENBQUM7R0FDSixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGlCQUFpQixFQUFFLFlBQVk7OztBQUN0QyxRQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7O0FBRW5CLFVBQU0sQ0FBQzs7Ozs7NkNBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQzs7Ozs7OztLQUN2QixDQUFDLENBQUM7QUFDSCxhQUFTLENBQUM7Ozs7OzZDQUNGLE1BQU0sQ0FBQyxhQUFhLEVBQUU7Ozs7NkNBRXRCLFVBQVUsQ0FBQyxPQUFPLENBQUM7Ozs7Ozs7S0FDMUIsQ0FBQyxDQUFDOztBQUVILE1BQUUsQ0FBQyxxREFBcUQsRUFBRTtVQUNwRCxJQUFJLFNBSUgsVUFBVSxFQUFFLFdBQVc7Ozs7O0FBSnhCLGdCQUFJLEdBQUcsZUFBYyxFQUFFLDBCQUFpQjtBQUMxQyxxQkFBTyxFQUFQLE9BQU87YUFDUixDQUFDOzs2Q0FDSSxNQUFNLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQzs7Ozs2Q0FDTSxNQUFNLENBQUMsR0FBRyxDQUFDLDRCQUE0QixFQUFFOzs7O0FBQTFFLHNCQUFVLFNBQVYsVUFBVTtBQUFFLHVCQUFXLFNBQVgsV0FBVzs7QUFDNUIsc0JBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLHdCQUF3QixDQUFDLENBQUM7QUFDbEQsdUJBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDOzs7Ozs7O0tBQ3ZDLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQzs7QUFFSCxRQUFRLENBQUMsT0FBTyxFQUFFLFlBQVk7OztBQUM1QixNQUFJLE1BQU0sWUFBQSxDQUFDO0FBQ1gsUUFBTSxDQUFDLFlBQU07QUFDWCxVQUFNLEdBQUcsbUJBQStCLENBQUM7R0FDMUMsQ0FBQyxDQUFDO0FBQ0gsV0FBUyxDQUFDOzs7OzsyQ0FDRixNQUFNLENBQUMsYUFBYSxFQUFFOzs7Ozs7O0dBQzdCLENBQUMsQ0FBQztBQUNILElBQUUsQ0FBQywwQkFBMEIsRUFBRTtlQUd4QixVQUFVOzs7Ozs7MkNBRlQsTUFBTSxDQUFDLGFBQWEsd0JBQWU7Ozs7MkNBQ25DLE1BQU0sQ0FBQyxRQUFRLEVBQUU7Ozs7MkNBQ0UsTUFBTSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRTs7OztBQUE3RCxvQkFBVSxTQUFWLFVBQVU7O0FBQ2YsY0FBSSxVQUFVLEVBQUU7QUFDZCxzQkFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUM7V0FDL0M7Ozs7Ozs7R0FDRixDQUFDLENBQUM7Q0FDSixDQUFDLENBQUMiLCJmaWxlIjoidGVzdC9mdW5jdGlvbmFsL2RyaXZlci1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCBBbmRyb2lkVWlhdXRvbWF0b3IyRHJpdmVyIGZyb20gJy4uLy4uJztcbmltcG9ydCBBREIgZnJvbSAnYXBwaXVtLWFkYic7XG5pbXBvcnQgeyBBUElERU1PU19DQVBTIH0gZnJvbSAnLi9kZXNpcmVkJztcblxuXG5jaGFpLnNob3VsZCgpO1xuY2hhaS51c2UoY2hhaUFzUHJvbWlzZWQpO1xuXG5jb25zdCBBUElERU1PU19QQUNLQUdFID0gJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMnO1xuXG5hc3luYyBmdW5jdGlvbiBraWxsU2VydmVyIChhZGJQb3J0KSB7XG4gIGxldCBhZGIgPSBhd2FpdCBBREIuY3JlYXRlQURCKHthZGJQb3J0fSk7XG4gIGF3YWl0IGFkYi5raWxsU2VydmVyKCk7XG59XG5cbmRlc2NyaWJlKCdjcmVhdGVTZXNzaW9uJywgZnVuY3Rpb24gKCkge1xuICBsZXQgZHJpdmVyO1xuICBiZWZvcmUoYXN5bmMgZnVuY3Rpb24gKCkge1xuICAgIGF3YWl0IGtpbGxTZXJ2ZXIoNTAzNyk7XG4gICAgZHJpdmVyID0gbmV3IEFuZHJvaWRVaWF1dG9tYXRvcjJEcml2ZXIoKTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2RlZmF1bHQgYWRiIHBvcnQnLCBmdW5jdGlvbiAoKSB7XG4gICAgYWZ0ZXJFYWNoKGFzeW5jIGZ1bmN0aW9uICgpIHtcbiAgICAgIGF3YWl0IGRyaXZlci5kZWxldGVTZXNzaW9uKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHN0YXJ0IGFuZHJvaWQgc2Vzc2lvbiBmb2N1c2luZyBvbiBkZWZhdWx0IHBrZyBhbmQgYWN0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgYXdhaXQgZHJpdmVyLmNyZWF0ZVNlc3Npb24oQVBJREVNT1NfQ0FQUyk7XG4gICAgICBsZXQge2FwcFBhY2thZ2UsIGFwcEFjdGl2aXR5fSA9IGF3YWl0IGRyaXZlci5hZGIuZ2V0Rm9jdXNlZFBhY2thZ2VBbmRBY3Rpdml0eSgpO1xuICAgICAgYXBwUGFja2FnZS5zaG91bGQuZXF1YWwoJ2lvLmFwcGl1bS5hbmRyb2lkLmFwaXMnKTtcbiAgICAgIGFwcEFjdGl2aXR5LnNob3VsZC5lcXVhbCgnLkFwaURlbW9zJyk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBzdGFydCBhbmRyb2lkIHNlc3Npb24gZm9jdXNpbmcgb24gY3VzdG9tIHBrZyBhbmQgYWN0JywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGNhcHMgPSBPYmplY3QuYXNzaWduKHt9LCBBUElERU1PU19DQVBTLCB7XG4gICAgICAgIGFwcFBhY2thZ2U6ICdpby5hcHBpdW0uYW5kcm9pZC5hcGlzJyxcbiAgICAgICAgYXBwQWN0aXZpdHk6ICcudmlldy5TcGxpdFRvdWNoVmlldycsXG4gICAgICB9KTtcbiAgICAgIGF3YWl0IGRyaXZlci5jcmVhdGVTZXNzaW9uKGNhcHMpO1xuICAgICAgbGV0IHthcHBQYWNrYWdlLCBhcHBBY3Rpdml0eX0gPSBhd2FpdCBkcml2ZXIuYWRiLmdldEZvY3VzZWRQYWNrYWdlQW5kQWN0aXZpdHkoKTtcbiAgICAgIGFwcFBhY2thZ2Uuc2hvdWxkLmVxdWFsKGNhcHMuYXBwUGFja2FnZSk7XG4gICAgICBhcHBBY3Rpdml0eS5zaG91bGQuZXF1YWwoY2Fwcy5hcHBBY3Rpdml0eSk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBlcnJvciBvdXQgZm9yIG5vdCBhcGsgZXh0ZW5zaW9uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGNhcHMgPSBPYmplY3QuYXNzaWduKHt9LCBBUElERU1PU19DQVBTLCB7XG4gICAgICAgIGFwcDogJ2ZvbycsXG4gICAgICAgIGFwcFBhY2thZ2U6ICdpby5hcHBpdW0uYW5kcm9pZC5hcGlzJyxcbiAgICAgICAgYXBwQWN0aXZpdHk6ICcudmlldy5TcGxpdFRvdWNoVmlldycsXG4gICAgICB9KTtcbiAgICAgIGF3YWl0IGRyaXZlci5jcmVhdGVTZXNzaW9uKGNhcHMpLnNob3VsZC5ldmVudHVhbGx5LmJlLnJlamVjdGVkV2l0aCgvTmV3IGFwcCBwYXRoIGZvbyBkaWQgbm90IGhhdmUgZXh0ZW5zaW9uIFxcLmFway8pO1xuICAgIH0pO1xuICAgIGl0KCdzaG91bGQgZXJyb3Igb3V0IGZvciBpbnZhbGlkIGFwcCBwYXRoJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGNhcHMgPSBPYmplY3QuYXNzaWduKHt9LCBBUElERU1PU19DQVBTLCB7XG4gICAgICAgIGFwcDogJ2Zvby5hcGsnLFxuICAgICAgICBhcHBQYWNrYWdlOiAnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcycsXG4gICAgICAgIGFwcEFjdGl2aXR5OiAnLnZpZXcuU3BsaXRUb3VjaFZpZXcnLFxuICAgICAgfSk7XG4gICAgICBhd2FpdCBkcml2ZXIuY3JlYXRlU2Vzc2lvbihjYXBzKS5zaG91bGQuZXZlbnR1YWxseS5iZS5yZWplY3RlZFdpdGgoL0NvdWxkIG5vdCBmaW5kLyk7XG4gICAgfSk7XG4gICAgaXQoJ3Nob3VsZCBnZXQgZGV2aWNlIG1vZGVsLCBtYW51ZmFjdHVyZXIgYW5kIHNjcmVlbiBzaXplIGluIHNlc3Npb24gZGV0YWlscycsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBjYXBzID0gT2JqZWN0LmFzc2lnbih7fSwgQVBJREVNT1NfQ0FQUywge1xuICAgICAgICBhcHBQYWNrYWdlOiAnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcycsXG4gICAgICAgIGFwcEFjdGl2aXR5OiAnLnZpZXcuU3BsaXRUb3VjaFZpZXcnLFxuICAgICAgfSk7XG4gICAgICBhd2FpdCBkcml2ZXIuY3JlYXRlU2Vzc2lvbihjYXBzKTtcblxuICAgICAgbGV0IHNlcnZlckNhcHMgPSBhd2FpdCBkcml2ZXIuZ2V0U2Vzc2lvbigpO1xuICAgICAgc2VydmVyQ2Fwcy5kZXZpY2VTY3JlZW5TaXplLnNob3VsZC5leGlzdDtcbiAgICAgIHNlcnZlckNhcHMuZGV2aWNlTW9kZWwuc2hvdWxkLmV4aXN0O1xuICAgICAgc2VydmVyQ2Fwcy5kZXZpY2VNYW51ZmFjdHVyZXIuc2hvdWxkLmV4aXN0O1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnY3VzdG9tIGFkYiBwb3J0JywgZnVuY3Rpb24gKCkge1xuICAgIGxldCBhZGJQb3J0ID0gNTA0MjtcblxuICAgIGJlZm9yZShhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBraWxsU2VydmVyKDUwMzcpO1xuICAgIH0pO1xuICAgIGFmdGVyRWFjaChhc3luYyBmdW5jdGlvbiAoKSB7XG4gICAgICBhd2FpdCBkcml2ZXIuZGVsZXRlU2Vzc2lvbigpO1xuXG4gICAgICBhd2FpdCBraWxsU2VydmVyKGFkYlBvcnQpO1xuICAgIH0pO1xuXG4gICAgaXQoJ3Nob3VsZCBzdGFydCBhbmRyb2lkIHNlc3Npb24gd2l0aCBhIGN1c3RvbSBhZGIgcG9ydCcsIGFzeW5jICgpID0+IHtcbiAgICAgIGxldCBjYXBzID0gT2JqZWN0LmFzc2lnbih7fSwgQVBJREVNT1NfQ0FQUywge1xuICAgICAgICBhZGJQb3J0LFxuICAgICAgfSk7XG4gICAgICBhd2FpdCBkcml2ZXIuY3JlYXRlU2Vzc2lvbihjYXBzKTtcbiAgICAgIGxldCB7YXBwUGFja2FnZSwgYXBwQWN0aXZpdHl9ID0gYXdhaXQgZHJpdmVyLmFkYi5nZXRGb2N1c2VkUGFja2FnZUFuZEFjdGl2aXR5KCk7XG4gICAgICBhcHBQYWNrYWdlLnNob3VsZC5lcXVhbCgnaW8uYXBwaXVtLmFuZHJvaWQuYXBpcycpO1xuICAgICAgYXBwQWN0aXZpdHkuc2hvdWxkLmVxdWFsKCcuQXBpRGVtb3MnKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcblxuZGVzY3JpYmUoJ2Nsb3NlJywgZnVuY3Rpb24gKCkge1xuICBsZXQgZHJpdmVyO1xuICBiZWZvcmUoKCkgPT4ge1xuICAgIGRyaXZlciA9IG5ldyBBbmRyb2lkVWlhdXRvbWF0b3IyRHJpdmVyKCk7XG4gIH0pO1xuICBhZnRlckVhY2goYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGRyaXZlci5kZWxldGVTZXNzaW9uKCk7XG4gIH0pO1xuICBpdCgnc2hvdWxkIGNsb3NlIGFwcGxpY2F0aW9uJywgYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGRyaXZlci5jcmVhdGVTZXNzaW9uKEFQSURFTU9TX0NBUFMpO1xuICAgIGF3YWl0IGRyaXZlci5jbG9zZUFwcCgpO1xuICAgIGxldCB7YXBwUGFja2FnZX0gPSBhd2FpdCBkcml2ZXIuYWRiLmdldEZvY3VzZWRQYWNrYWdlQW5kQWN0aXZpdHkoKTtcbiAgICBpZiAoYXBwUGFja2FnZSkge1xuICAgICAgYXBwUGFja2FnZS5zaG91bGQubm90LmVxdWFsKEFQSURFTU9TX1BBQ0tBR0UpO1xuICAgIH1cbiAgfSk7XG59KTtcbiJdLCJzb3VyY2VSb290IjoiLi4vLi4vLi4ifQ==
